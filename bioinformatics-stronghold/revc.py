#!/anaconda3/bin/python3
#this script takes a DNA sequence as input and returns the reverse complement sequence as output

DNA = 'CGAGCTCCGCCAATTGCCTCATATGATGATAGGCTAACTGGGCTTCCGTTGTCATGCGACATGACATTATACGAGTGAGAGATCATGGAGATCTACTATGTTACCCTACTAATCTCCTTTGGAGGACCAGGAGTGAGTCGATCCCGCTTTGTTTTGCGTCGCGGGATCGGTGCGTGCAAAAGTGAGGTGGCGTCTCTTTGCTCCAAACGTGCGTAAATTGTTATGGGCAAGAGTGGAGCAGGTGGGACGGCCCATTGGGTCATCGCGGTCGCTGCGCCGTCTAAAGACTACAAAAAAAGCAGGTTTGTAGGAGCAATTTAGGGCGAATCATTAAGTGTGCGCCATCGTAAGCGCGTTTTCCTGTGCATCGAATCTCGAGCATAGTTCGGTCGTCGCCTGTCTCCTCAGGCACTAGGAATTGTTTGGCGAGGCTATCGTCTGACGCGCCCATACAGCAAGATTCATCTCGTGTAACGTCTCCCTCCATGCCTATTACAGGGAAGTCTAATATTTGCATAAAGTACTCTGCGTAATGCGAGCACATTCGACTCTTAGCACACTCTCGACGTTCGATGGCCGGCCGGCTGCGGAAGCCGGCGGGTTACAAGTCAGGCTGGCTAGTACTTTTATAAATCTGAATACGCCTGAAGTGATGTTGTCTTTAGCAAGTAGATCGTTGGCGTCTACCTGGGTCCTACGCTTCTCTTGCCTTTCTTCTAGTAATATCGAGTTGTGAGCGCGACAAGGCACCTTGTTACTCCATAGAGAGGGAACCGTGCGCGGGTAATTCGGCACTGAGAGTCGCAGCAGTTGACGAA'

def revc(seq):
    newSeq = []

    for x in seq:
        if x == "T":
            newSeq.append("A")
        elif x == "A":
            newSeq.append("T")
        elif x == "C":
            newSeq.append("G")
        elif x == "G":
            newSeq.append("C")

    print(f'before: {newSeq}')
    revSeq = newSeq.reverse()       
    print(f'after: {newSeq}')

    listSeq = ''.join(newSeq)
    return(listSeq)
        

revcompSeq = revc(DNA)
#print(revcompSeq)